[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "vqvae-from-scratch"
version = "0.0.1"
authors = [
  { name="Berker Demirel", email="berker.demirel@gmail.com" },
]
description = "A VQGAN implementation from scratch."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "torch",
    "torchvision",
    "torchaudio",
    "pytorch-lightning",
    "hydra-core",
    "wandb",
    "lpips",
    "einops",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "jinja2",
    "rich",
    "pre-commit",
    "pytest",
    "ruff",
    "black",
]

[project.urls]
"Homepage" = "https://github.com/berkerdemirel/vqvae-from-scratch"
"Bug Tracker" = "https://github.com/berkerdemirel/vqvae-from-scratch/issues"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["vqvae"]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-ra"
testpaths = ["tests"]
pythonpath = [
  "src"
]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "pragma: nocover",
    "if __name__ == .__main__.:",
]

[tool.mypy]
files= ["src/**/*.py", "test/*.py"]
ignore_missing_imports = true

[tool.pydocstyle]
convention = 'google'
# ignore all missing docs errors
add-ignore = ['D100', 'D101', 'D102', 'D103', 'D104', 'D105', 'D106', 'D107']

[tool.bandit]
skips = ["B101"]

[tool.setuptools_scm]
write_to = "src/vqvae/_version.py"
write_to_template = '__version__ = "{version}"'
